package ua.company.training.kukuruza.dao.daoMySql;

import ua.company.training.kukuruza.dbConnection.IConnectionFactory;
import ua.company.training.kukuruza.dao.IDaoSubject;
import ua.company.training.kukuruza.dao.mapper.SubjectMapper;
import ua.company.training.kukuruza.entity.Subject;

import java.util.Collections;
import java.util.List;
import java.util.Optional;
import java.util.Set;

public class MySqlDaoSubject implements IDaoSubject {
    private static final String GET_SUBJECT_BY_ID_SQL = "SELECT * FROM subject WHERE id = ?";
    private static final String GET_ALL_SUBJECTS_SQL = "SELECT * FROM subject";
    private static final String INSERT_SUBJECT_SQL = "INSERT INTO subject VALUES (NULL, ?)";
    private static final String UPDATE_SUBJECT_SQL = "UPDATE subject SET name = ? WHERE id = ?";
    private static final String DELETE_SUBJECT_SQL = "DELETE FROM subject WHERE id = ?";
    private MySqlDaoHelper helper = MySqlDaoHelper.getInstance();
    private IConnectionFactory factory;

    public MySqlDaoSubject(IConnectionFactory factory) {
        this.factory = factory;
    }

    @Override
    public Optional<Subject> find(Integer id) {
        return helper.get(GET_SUBJECT_BY_ID_SQL, SubjectMapper::map, id);
    }

    @Override
    public List<Subject> findAll() {
        return helper.getList(GET_ALL_SUBJECTS_SQL, SubjectMapper::map);
    }

    @Override
    public List<Subject> findByIdSet(Set<Integer> subjectsId) {
        if (subjectsId.isEmpty())
            return Collections.emptyList();
        String sql = helper.buildSql(new StringBuilder("SELECT * FROM subject WHERE id IN("), subjectsId);
        return helper.getList(sql, SubjectMapper::map);
    }

    @Override
    public Integer save(Subject entity) {
        Integer autoGeneratedId = helper.save(INSERT_SUBJECT_SQL, entity.getName());
        entity.setId(autoGeneratedId);
        return autoGeneratedId;
    }

    @Override
    public void update(Subject entity) {
        helper.update(UPDATE_SUBJECT_SQL, entity.getName(), entity.getId());
    }

    @Override
    public boolean delete(Integer id) {
        return helper.delete(DELETE_SUBJECT_SQL, id);
    }
}
