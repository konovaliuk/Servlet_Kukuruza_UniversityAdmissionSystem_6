package ua.epam.training.kukuruza.model.dao.daoMySql;

import ua.epam.training.kukuruza.model.connection.IConnectionFactory;
import ua.epam.training.kukuruza.model.dao.IDaoGrade;
import ua.epam.training.kukuruza.model.dao.mapper.GradeMapper;
import ua.epam.training.kukuruza.model.entity.Grade;

import java.util.List;
import java.util.Optional;

public class MySqlDaoGrade implements IDaoGrade {
    private static final String GET_GRADE_BY_ID_SQL = "SELECT * FROM grade WHERE id = ?";
    private static final String GET_GRADE_BY_USER_ID_SQL = "SELECT * FROM grade WHERE user_id = ?";
    private static final String GET_ALL_GRADES_SQL = "SELECT * FROM grade";
    private static final String INSERT_GRADE_SQL = "INSERT INTO grade VALUES (NULL, ?, ?, ?)";
    private static final String UPDATE_GRADE_SQL = "UPDATE grade SET " +
            "user_id = ?, subject_id = ?, grade = ? WHERE id = ?";
    private static final String DELETE_GRADE_SQL = "DELETE FROM grade WHERE id = ?";
    private MySqlDaoHelper helper = MySqlDaoHelper.getInstance();
    private IConnectionFactory factory;

    public MySqlDaoGrade(IConnectionFactory factory) {
        this.factory = factory;
    }

    @Override
    public Optional<Grade> get(Long id) {
        return helper.get(GET_GRADE_BY_ID_SQL, GradeMapper::map, id);
    }

    @Override
    public List<Grade> getAll() {
        return helper.executeSelectQuery(GET_ALL_GRADES_SQL, GradeMapper::map);
    }

    @Override
    public List<Grade> getUserGrades(Long userId) {
        return helper.executeSelectQuery(GET_GRADE_BY_USER_ID_SQL, GradeMapper::map, userId);
    }

    @Override
    public Long save(Grade entity) {
        Long autoGeneratedID = helper.save(INSERT_GRADE_SQL, Long.class,
                entity.getUserId(), entity.getSubjectId(), entity.getGrade());
        entity.setId(autoGeneratedID);
        return autoGeneratedID;
    }

    @Override
    public void update(Grade entity) {
        helper.update(UPDATE_GRADE_SQL, entity.getUserId(), entity.getSubjectId(), entity.getGrade(), entity.getId());
    }

    @Override
    public boolean delete(Long id) {
        return helper.delete(DELETE_GRADE_SQL, id);
    }
}
