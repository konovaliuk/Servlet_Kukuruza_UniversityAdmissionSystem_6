package ua.epam.training.kukuruza.model.dao.daoMySql;

import ua.epam.training.kukuruza.model.connection.IConnectionFactory;
import ua.epam.training.kukuruza.model.dao.IDaoUserExam;
import ua.epam.training.kukuruza.model.dao.mapper.UserExamMapper;
import ua.epam.training.kukuruza.model.entity.UserExam;

import java.util.List;
import java.util.Optional;

public class MySqlDaoUserExam implements IDaoUserExam {
    private static final String GET_USER_EXAM_BY_ID_SQL = "SELECT * FROM user_exam WHERE id = ?";
    private static final String GET_ALL_USER_EXAM_SQL = "SELECT * FROM user_exam";
    private static final String INSERT_USER_EXAM_SQL = "INSERT INTO user_exam VALUES (NULL, ?, ?)";
    private static final String UPDATE_USER_EXAM_SQL = "UPDATE user_exam SET " +
            "user_id = ?, exam_id = ? WHERE id = ?";
    private static final String DELETE_USER_EXAM_SQL = "DELETE FROM user_exam WHERE id = ?";
    private MySqlDaoHelper helper = MySqlDaoHelper.getInstance();
    private IConnectionFactory factory;

    public MySqlDaoUserExam(IConnectionFactory factory) {
        this.factory = factory;
    }

    @Override
    public Optional<UserExam> get(Long id) {
        return helper.get(GET_USER_EXAM_BY_ID_SQL, UserExamMapper::map, id);
    }

    @Override
    public List<UserExam> getAll() {
        return helper.executeSelectQuery(GET_ALL_USER_EXAM_SQL, UserExamMapper::map);
    }

    @Override
    public Long save(UserExam entity) {
        Long autoGeneratedId = helper.save(INSERT_USER_EXAM_SQL, Long.class, entity.getUserId(), entity.getExamId());
        entity.setId(autoGeneratedId);
        return autoGeneratedId;
    }

    @Override
    public void update(UserExam entity) {
        helper.update(UPDATE_USER_EXAM_SQL, entity.getUserId(), entity.getExamId(), entity.getId());
    }

    @Override
    public boolean delete(Long id) {
        return helper.delete(DELETE_USER_EXAM_SQL, id);
    }
}
